{
  "info": {
    "name": "WPFort API",
    "description": "# WPFort API Collection\n\nThis collection contains all endpoints for the WPFort API, including webhooks.\n\n## API Authentication\nAll API endpoints (except webhooks) require authentication using an API token.\nAdd the following header to all requests:\n- `x-wpfort-token`: Your API token (stored in the `wpfort_server_api_key` environment variable)\n\n## Webhook Security\nAll webhooks require HMAC signature verification. Each request must include:\n- `x-wpfort-signature`: HMAC SHA256 signature\n- `x-wpfort-timestamp`: Current Unix timestamp in seconds\n\n### Signature Generation\n1. Get your webhook secret using the `/webhook-secrets/{domain}/webhook-secret` endpoint\n2. Create signature data: `timestamp + '.' + JSON.stringify(payload)`\n3. Generate HMAC: `hmac_sha256(signatureData, webhookSecret)`",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Webhook Secrets",
      "item": [
        {
          "name": "Generate Webhook Secret",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/webhook-secrets/{{domain}}/webhook-secret",
              "host": ["{{base_url}}"],
              "path": ["webhook-secrets", "{{domain}}", "webhook-secret"]
            },
            "description": "Generate a new webhook secret for a website. If a secret already exists, it will be rotated."
          }
        },
        {
          "name": "Delete Webhook Secret",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/webhook-secrets/{{domain}}/webhook-secret",
              "host": ["{{base_url}}"],
              "path": ["webhook-secrets", "{{domain}}", "webhook-secret"]
            },
            "description": "Delete the webhook secret for a website. This will invalidate all future webhook calls until a new secret is generated."
          }
        }
      ]
    },
    {
      "name": "Scans",
      "item": [
        {
          "name": "Start Scan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/start",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "start"]
            },
            "description": "Start a new security scan for a website. Returns an error if a scan is already in progress."
          }
        },
        {
          "name": "Get Scan Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/status/{{scan_id}}",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "status", "{{scan_id}}"]
            },
            "description": "Get the status of a specific scan by ID."
          }
        },
        {
          "name": "Get Scan Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/results/{{scan_id}}",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "results", "{{scan_id}}"]
            },
            "description": "Get the results of a completed scan."
          }
        },
        {
          "name": "Get Active Scan",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/active",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "active"]
            },
            "description": "Check if there's an active scan for a website and get its details."
          }
        },
        {
          "name": "Quarantine File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"file_path\": \"wp-content/uploads/suspicious-file.php\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/quarantine",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "quarantine"]
            },
            "description": "Quarantine a suspicious file to prevent it from executing."
          }
        },
        {
          "name": "Get Quarantined Files",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/quarantine",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "quarantine"]
            },
            "description": "Get a list of all quarantined files for a website."
          }
        },
        {
          "name": "Restore Quarantined File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"quarantine_id\": \"q12345\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/quarantine/restore",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "quarantine", "restore"]
            },
            "description": "Restore a previously quarantined file."
          }
        },
        {
          "name": "Batch Quarantine/Delete Files",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-token",
                "value": "{{wpfort_server_api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"operation\": \"quarantine\",\n    \"files\": [\n        \"wp-content/uploads/suspicious-file1.php\",\n        \"wp-content/uploads/suspicious-file2.php\"\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/scans/{{domain}}/quarantine/batch",
              "host": ["{{base_url}}"],
              "path": ["scans", "{{domain}}", "quarantine", "batch"]
            },
            "description": "Perform a batch operation (quarantine or delete) on multiple files at once."
          }
        }
      ]
    },
    {
      "name": "Scan Webhooks",
      "item": [
        {
          "name": "Scan Progress Update",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-signature",
                "value": "{{signature}}",
                "type": "text"
              },
              {
                "key": "x-wpfort-timestamp",
                "value": "{{timestamp}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"scan_id\": \"{{scan_id}}\",\n    \"status\": \"running\",\n    \"progress\": 45,\n    \"files_scanned\": \"450\",\n    \"total_files\": \"1000\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/webhooks/scan-progress",
              "host": ["{{base_url}}"],
              "path": ["webhooks", "scan-progress"]
            },
            "description": "Update the progress of an ongoing scan. The signature must be generated using the website's webhook secret."
          }
        },
        {
          "name": "Scan Failed",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-signature",
                "value": "{{signature}}",
                "type": "text"
              },
              {
                "key": "x-wpfort-timestamp",
                "value": "{{timestamp}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"scan_id\": \"{{scan_id}}\",\n    \"error_message\": \"Failed to access file: wp-content/uploads/malware.php\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/webhooks/scan-failed",
              "host": ["{{base_url}}"],
              "path": ["webhooks", "scan-failed"]
            },
            "description": "Mark a scan as failed with an error message."
          }
        },
        {
          "name": "Scan Complete",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-wpfort-signature",
                "value": "{{signature}}",
                "type": "text"
              },
              {
                "key": "x-wpfort-timestamp",
                "value": "{{timestamp}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"scan_id\": \"{{scan_id}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/webhooks/scan-complete",
              "host": ["{{base_url}}"],
              "path": ["webhooks", "scan-complete"]
            },
            "description": "Mark a scan as completed. This will fetch the final results from the WPSec API."
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Helper function to generate HMAC signature",
          "const generateSignature = () => {",
          "    // Get webhook secret from environment",
          "    const secret = pm.environment.get('webhook_secret');",
          "    if (!secret) {",
          "        console.error('webhook_secret not set in environment');",
          "        return;",
          "    }",
          "",
          "    // Get request body",
          "    let payload;",
          "    try {",
          "        payload = JSON.parse(pm.request.body.raw);",
          "    } catch (e) {",
          "        console.error('Invalid JSON in request body');",
          "        return;",
          "    }",
          "",
          "    // Generate signature",
          "    const timestamp = Math.floor(Date.now() / 1000).toString();",
          "    const signatureData = timestamp + '.' + JSON.stringify(payload);",
          "    const signature = CryptoJS.HmacSHA256(signatureData, secret).toString(CryptoJS.enc.Hex);",
          "",
          "    // Set environment variables",
          "    pm.environment.set('signature', signature);",
          "    pm.environment.set('timestamp', timestamp);",
          "",
          "    console.log('Generated signature for webhook:', {",
          "        timestamp,",
          "        payload,",
          "        signature",
          "    });",
          "};",
          "",
          "// Run signature generation",
          "generateSignature();"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "domain",
      "value": "example.com",
      "type": "string"
    },
    {
      "key": "scan_id",
      "value": "12345",
      "type": "string"
    },
    {
      "key": "wpfort_server_api_key",
      "value": "your-api-key-here",
      "type": "string"
    }
  ]
}